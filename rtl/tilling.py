import numpy as np
import random
rows_a = 20
cols_a = 20
rows_b = 20 
cols_b = 20
random.seed(42)

# Generate matrix A
# matrix_a = np.array([[random.randint(0, 6) for _ in range(cols_a)] for _ in range(rows_a)])

# # Generate matrix B
# matrix_b = np.array([[random.randint(0, 6) for _ in range(cols_b)] for _ in range(rows_b)])
matrix_a=np.array([
          [5, 5, 8, 0, 2, 5, 1, 5, 7, 3, 2, 6, 4, 7, 8, 2, 3, 4, 7, 3],
          [6, 7, 0, 0, 8, 5, 0, 7, 8, 8, 4, 4, 6, 1, 7, 4, 0, 3, 1, 6],
          [8, 8, 8, 6, 0, 1, 6, 6, 8, 4, 0, 6, 0, 8, 8, 7, 2, 5, 7, 7],
          [5, 6, 4, 6, 1, 5, 3, 2, 0, 3, 3, 0, 7, 4, 8, 4, 0, 4, 5, 7],
          [7, 8, 4, 8, 2, 0, 4, 3, 1, 8, 7, 3, 3, 0, 6, 1, 8, 2, 6, 2],
          [1, 8, 7, 0, 0, 6, 5, 3, 4, 5, 0, 1, 3, 4, 3, 7, 6, 0, 7, 7],
          [7, 7, 2, 2, 4, 0, 2, 8, 4, 4, 4, 0, 6, 8, 4, 8, 7, 5, 5, 2],
          [0, 7, 6, 3, 3, 0, 1, 6, 4, 4, 6, 6, 0, 4, 5, 1, 1, 2, 1, 0],
          [5, 2, 3, 5, 7, 1, 1, 2, 5, 2, 1, 0, 1, 8, 5, 0, 4, 2, 5, 1],
          [8, 5, 6, 4, 1, 2, 3, 4, 4, 8, 6, 6, 7, 6, 7, 7, 1, 0, 8, 0],
          [1, 1, 1, 6, 3, 8, 8, 7, 3, 5, 7, 7, 5, 3, 0, 5, 0, 8, 3, 5],
          [1, 6, 7, 0, 6, 6, 8, 5, 0, 5, 5, 5, 6, 7, 1, 6, 6, 2, 7, 5],
          [6, 2, 2, 5, 2, 8, 3, 5, 4, 7, 6, 1, 8, 0, 3, 7, 8, 7, 2, 4],
          [0, 6, 5, 6, 5, 3, 5, 8, 6, 2, 5, 8, 0, 3, 3, 7, 7, 6, 5, 2],
          [1, 7, 2, 4, 3, 5, 5, 1, 4, 0, 8, 7, 3, 8, 2, 1, 8, 5, 0, 6],
          [6, 0, 6, 1, 4, 6, 0, 0, 0, 7, 1, 4, 6, 2, 6, 0, 5, 4, 7, 1],
          [5, 0, 6, 7, 0, 7, 2, 2, 2, 8, 0, 3, 1, 4, 6, 8, 7, 6, 6, 2],
          [5, 8, 4, 1, 0, 1, 0, 5, 8, 7, 5, 0, 3, 0, 4, 3, 7, 5, 7, 4],
          [5, 3, 7, 7, 0, 4, 5, 7, 7, 7, 3, 0, 7, 2, 0, 7, 1, 5, 5, 0],
          [3, 7, 0, 4, 8, 1, 6, 8, 8, 4, 2, 4, 2, 3, 2, 8, 2, 1, 3, 8]
      ])
matrix_a = matrix_a[:, ::-1]
matrix_b= np.array([
          [1, 5, 4, 4, 8, 6, 8, 1, 8, 2, 6, 0, 5, 6, 4, 5, 8, 2, 3, 6],
          [8, 5, 2, 1, 2, 0, 3, 2, 1, 6, 3, 6, 8, 8, 0, 8, 7, 4, 7, 7],
          [7, 6, 7, 2, 1, 3, 3, 0, 0, 4, 0, 3, 7, 8, 2, 1, 2, 3, 8, 1],
          [1, 3, 3, 7, 7, 3, 5, 5, 7, 3, 6, 6, 0, 3, 0, 4, 7, 7, 8, 0],
          [2, 0, 6, 0, 2, 8, 8, 7, 2, 1, 5, 7, 8, 2, 6, 4, 2, 3, 5, 4],
          [8, 0, 1, 0, 4, 5, 7, 4, 5, 5, 6, 5, 5, 2, 0, 4, 4, 4, 7, 5],
          [0, 2, 1, 1, 0, 2, 7, 3, 2, 3, 3, 1, 4, 0, 1, 8, 1, 3, 3, 5],
          [1, 7, 5, 0, 6, 3, 1, 6, 1, 8, 3, 5, 2, 4, 7, 8, 4, 0, 7, 8],
          [5, 0, 1, 6, 6, 5, 8, 8, 3, 1, 0, 5, 2, 0, 5, 7, 8, 7, 6, 4],
          [7, 8, 3, 8, 1, 5, 2, 0, 1, 0, 1, 3, 6, 4, 3, 2, 1, 7, 1, 0],
          [5, 6, 3, 7, 3, 3, 8, 7, 7, 2, 3, 5, 0, 0, 8, 2, 6, 4, 2, 2],
          [4, 5, 3, 1, 7, 3, 7, 3, 2, 2, 3, 6, 5, 2, 2, 5, 7, 7, 7, 2],
          [3, 8, 8, 8, 0, 1, 1, 0, 6, 2, 7, 5, 4, 1, 2, 6, 0, 1, 7, 1],
          [1, 2, 1, 0, 4, 2, 3, 5, 1, 6, 7, 3, 6, 6, 0, 2, 5, 5, 3, 8],
          [5, 5, 0, 1, 6, 3, 7, 8, 8, 6, 1, 2, 6, 1, 2, 1, 5, 0, 4, 0],
          [1, 2, 8, 0, 7, 7, 1, 5, 4, 5, 0, 7, 4, 0, 7, 1, 4, 2, 4, 5],
          [1, 6, 1, 4, 6, 2, 0, 1, 0, 3, 5, 1, 2, 1, 5, 0, 1, 8, 5, 5],
          [7, 3, 7, 1, 0, 4, 7, 1, 7, 4, 1, 0, 6, 8, 0, 1, 7, 7, 4, 0],
          [3, 7, 6, 3, 8, 1, 0, 0, 0, 0, 3, 8, 2, 5, 6, 1, 7, 3, 7, 1],
          [5, 6, 6, 5, 4, 4, 3, 4, 6, 7, 2, 0, 2, 0, 0, 6, 0, 6, 4, 6]
      ])    
matrix_b = matrix_b[:, ::-1]
matrix_c=np.zeros((rows_a,cols_b))
N=cols_b
M=rows_a
K=cols_a
blkn=16
blkm=16
blkk=16
for n in range(0, N, blkn):
    nsize = blkn if n + blkn <= N else N % blkn
    for m in range(0, M, blkm):
        msize = blkm if m + blkm <= M else M % blkm
        for k in range(0, K, blkk):
            ksize = blkk if k + blkk <= K else K % blkk
            matrix_c[m:m+msize, n:n+nsize] += np.dot(matrix_a[m:m+msize, k:k+ksize], matrix_b[k:k+ksize, n:n+nsize])
            print("matrixb=",matrix_b[k:k+ksize, n:n+nsize])
            print("matrixa=",matrix_a[m:m+msize, k:k+ksize])
            print(matrix_c[m:m+msize, n:n+nsize])
            print("-----------------------------------------------------------")
print(np.dot(matrix_a,matrix_b))
